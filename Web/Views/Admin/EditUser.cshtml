@model UserCreateModel
@{
    ViewBag.Title = "修改用户";
    object textboxAttribute = new { @class = "form-control" };
}
<style type="text/css">
    .role-width {
        min-width: 100px;
        width: 100px;
    }
</style>
<div class="ibox-content">
    @using (Ajax.BeginForm("EditUser", "Admin", null, new AjaxOptions { OnSuccess = "OnSuccessCallBack" }, new { @class = "form-horizontal", id = "userEidtForm" }))
    {
        @Html.HiddenFor(n=>n.ProvinceCode)
        @Html.HiddenFor(n => n.CityCode)
        @Html.HiddenFor(n => n.AreaCode)
        @Html.HiddenFor(n => n.Id)
        <div class="box-body">
            <div class="form-group">
                @Html.LabelFor(n => n.UserName, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(n => n.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.UserName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(n => n.LoginAccount, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(n => n.LoginAccount, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.LoginAccount)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(n => n.PhoneNumber, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(n => n.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.PhoneNumber)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(n => n.UserType, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(n => n.UserType, ViewData["UserType"] as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.UserType)
                </div>
            </div>
            <div class="form-group">
                @Html.Label("省市区", new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <div id="userPicker" class="form-control" style="padding:0px !important;border:0px !important;float:left;display:inline-flex;" data-autoselect="3" data-toggle="distpicker" data-placeholder="false" data-province="@(Model.ProvinceName)" data-city="@(Model.CityName)" data-district="@(Model.AreaName)">
                        <select class="form-control"></select>
                        <select class="form-control"></select>
                        <select class="form-control"></select>
                    </div>
                    <div class="clear_all"></div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(n => n.Description, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextAreaFor(n => n.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.Description)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(n => n.Roles, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @foreach (var role in Model.Roles)
                    {
                        <label class="checkbox-inline i-checks role-width">
                            <input type="checkbox" name="role" value="@role.Name" checked="checked">@role.Name
                        </label>
                    }
                </div>
            </div>
        </div>
        <div class="layer-btn">
            <button type="button" class="btn btn-default btn-sm pull-right" cancel>取消</button>
            <button type="button" class="btn btn-primary btn-sm pull-right" id="submit">提交</button>
        </div>
    }
</div>
<script type="text/javascript">
    window.title = "编辑用户";
    $(".i-checks").iCheck({ checkboxClass: "icheckbox_square-green", radioClass: "iradio_square-green", })
    $("#userPicker").distpicker();

    $(function () {
        //手动选定角色
        if ($("#RoleIds").val()) {
            var roleArray = $("#RoleIds").val().split(',');
            for (var i = 0; i < roleArray.length; i++) {
                $(".checkbox-inline input[value='" + roleArray[i] + "']").parent().attr("class", "icheckbox_square-green checked");
                $(".checkbox-inline input[value='" + roleArray[i] + "']").attr("checked", "checked");
            }
        }

        //提交
        $(document).on("click", "#submit", function (e) {
            e.preventDefault();
            //赋值
            $("#ProvinceCode").val(distpickerValue("userPicker", "province"));
            $("#CityCode").val(distpickerValue("userPicker", "city"));
            $("#AreaCode").val(distpickerValue("userPicker", "district"));
            $(this).attr("disabled", "disabled");
            $("#userEidtForm").ajaxSubmit({
                type: "POST",
                success: function (data) {
                    layer.closeAll("page");
                    layer.msg(data.Message, { icon: data.Status, time: 2500 }, function () {
                        window.location.reload();
                    })
                }
            })
        });
    })
</script>
